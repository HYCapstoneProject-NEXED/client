name: Deploy to Server

on:
  push:
    branches: [ main ] # main 브랜치에 직접 푸시하거나 PR이 merge될 때 실행
  pull_request:
    types: [closed]
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    # PR이 merge된 경우에만 실행 (직접 push거나 PR이 merge된 경우)
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build
        run: CI=false npm run build
      
      - name: Deploy with expect
        env:
          SERVER_PASS: ${{ secrets.SERVER_PASSWORD }}
        run: |
          sudo apt-get update
          sudo apt-get install -y expect
          
          # 설정 파일들 복사
          echo '#!/usr/bin/expect -f
          spawn scp -o StrictHostKeyChecking=no Dockerfile.production docker-compose.production.yml nginx.conf defectect@166.104.246.64:~/website/
          expect "password:"
          send "$env(SERVER_PASS)\r"
          expect eof
          ' > copy_files.exp
          
          # build 폴더 tar로 묶기
          tar -czf build.tar.gz build/
          
          # tar 파일 복사
          echo '#!/usr/bin/expect -f
          spawn scp -o StrictHostKeyChecking=no build.tar.gz defectect@166.104.246.64:~/website/
          expect "password:"
          send "$env(SERVER_PASS)\r"
          expect eof
          ' > copy_build.exp
          
          # 서버에서 명령 실행
          echo '#!/usr/bin/expect -f
          spawn ssh -o StrictHostKeyChecking=no defectect@166.104.246.64 "mkdir -p ~/website && cd ~/website && tar -xzf build.tar.gz && docker-compose -f docker-compose.yml up -d --build"
          expect "password:"
          send "$env(SERVER_PASS)\r"
          expect eof
          ' > run_commands.exp
          
          # 스크립트 실행 권한 부여 및 실행
          chmod +x copy_files.exp copy_build.exp run_commands.exp
          ./copy_files.exp
          ./copy_build.exp
          ./run_commands.exp 