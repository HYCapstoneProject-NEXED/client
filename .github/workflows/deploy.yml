name: Deploy to Server

on:
  push:
    branches: [ main ] # main 브랜치에 직접 푸시하거나 PR이 merge될 때 실행
  pull_request:
    types: [closed]
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    # PR이 merge된 경우에만 실행 (직접 push거나 PR이 merge된 경우)
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    steps:
      - uses: actions/checkout@v3
      
      - name: Deploy with expect
        env:
          SERVER_PASS: ${{ secrets.SERVER_PASSWORD }}
        run: |
          sudo apt-get update
          sudo apt-get install -y expect
          
          # 단일 스크립트로 배포 실행
          cat > deploy.exp << 'EOL'
          #!/usr/bin/expect -f
          # 디버깅 모드 켜기
          exp_internal 1
          
          # 타임아웃 설정
          set timeout 600
          
          # SSH 연결 및 명령 실행
          spawn ssh -o StrictHostKeyChecking=no defectect@166.104.246.64 "
            # 디렉토리 준비
            mkdir -p ~/website
            cd ~/website
            
            # 소스 코드 복제
            git clone https://github.com/HYCapstoneProject-NEXED/client.git . || git pull
            
            # 이미 실행 중인 서버 종료
            pkill -f 'serve -s build' || true
            
            # 의존성 설치 및 빌드
            export PATH=\$HOME/.local/bin:\$PATH
            npm ci
            CI=false npm run build
            
            # 서버 실행
            npm install -g serve
            nohup serve -s build -l 3000 > server.log 2>&1 &
            echo \$! > serve.pid
            
            # systemd 서비스 설정 (서버 재시작시 자동 실행)
            mkdir -p ~/.config/systemd/user
            cat > ~/.config/systemd/user/website.service << 'EOF'
            [Unit]
            Description=React Website

            [Service]
            ExecStart=\$(which serve) -s \$(echo \$HOME)/website/build -l 3000
            Restart=always
            
            [Install]
            WantedBy=default.target
            EOF
            
            systemctl --user daemon-reload
            systemctl --user enable website
            systemctl --user restart website
            
            # 상태 확인
            echo '배포 완료! 서버 상태:'
            ps aux | grep serve
          "
          expect "password:"
          send "$env(SERVER_PASS)\r"
          expect eof
          EOL
          
          chmod +x deploy.exp
          ./deploy.exp 