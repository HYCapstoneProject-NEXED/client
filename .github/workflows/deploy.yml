name: Deploy to Server

on:
  push:
    branches: [ main ] # main 브랜치에 직접 푸시하거나 PR이 merge될 때 실행
  pull_request:
    types: [closed]
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    # PR이 merge된 경우에만 실행 (직접 push거나 PR이 merge된 경우)
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build
        run: CI=false npm run build
      
      - name: Deploy with expect
        env:
          SERVER_PASS: ${{ secrets.SERVER_PASSWORD }}
        run: |
          sudo apt-get update
          sudo apt-get install -y expect
          
          # 서버에서 직접 빌드 및 실행
          echo '#!/usr/bin/expect -f
          spawn ssh -o StrictHostKeyChecking=no defectect@166.104.246.64 "mkdir -p ~/website && cd ~/website && git clone https://github.com/HYCapstoneProject-NEXED/client.git . || git pull && npm ci && CI=false npm run build && cp docker-compose.production.yml docker-compose.yml"
          expect "password:"
          send "$env(SERVER_PASS)\r"
          expect eof
          ' > build_on_server.exp
          chmod +x build_on_server.exp
          ./build_on_server.exp
          
          # 설정 파일 복사
          echo '#!/usr/bin/expect -f
          spawn scp -o StrictHostKeyChecking=no Dockerfile.production nginx.conf defectect@166.104.246.64:~/website/
          expect "password:"
          send "$env(SERVER_PASS)\r"
          expect eof
          ' > copy_configs.exp
          chmod +x copy_configs.exp
          ./copy_configs.exp
          
          # Docker 실행 (권한이 있다면)
          echo '#!/usr/bin/expect -f
          spawn ssh -o StrictHostKeyChecking=no defectect@166.104.246.64 "cd ~/website && if command -v docker &> /dev/null && docker ps &> /dev/null; then docker-compose up -d --build; else echo \"Docker 권한 없음. Node.js로 실행 시도\"; npm install -g serve; nohup serve -s build -l 3000 > server.log 2>&1 & echo $! > serve.pid; fi"
          expect "password:"
          send "$env(SERVER_PASS)\r"
          expect eof
          ' > run_server.exp
          chmod +x run_server.exp
          ./run_server.exp 