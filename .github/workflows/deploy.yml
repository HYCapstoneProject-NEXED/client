name: Deploy to Server

on:
  push:
    branches: [ main ] # main 브랜치에 직접 푸시하거나 PR이 merge될 때 실행
  pull_request:
    types: [closed]
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    # PR이 merge된 경우에만 실행 (직접 push거나 PR이 merge된 경우)
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build
        run: CI=false npm run build
        
      - name: Install sshpass
        run: sudo apt-get install -y sshpass
        
      - name: Deploy to server
        env:
          SSH_PASS: defectect!!@
        run: |
          # 원격 폴더 생성 확인
          sshpass -p "$SSH_PASS" ssh -o StrictHostKeyChecking=no defectect@166.104.246.64 "mkdir -p ~/website"
          
          # 설정 파일 복사
          sshpass -p "$SSH_PASS" scp -o StrictHostKeyChecking=no Dockerfile.production defectect@166.104.246.64:~/website/
          sshpass -p "$SSH_PASS" scp -o StrictHostKeyChecking=no docker-compose.production.yml defectect@166.104.246.64:~/website/docker-compose.yml
          sshpass -p "$SSH_PASS" scp -o StrictHostKeyChecking=no nginx.conf defectect@166.104.246.64:~/website/
          
          # build 폴더 복사 (압축 후 전송하여 속도 향상)
          tar -czf build.tar.gz build/
          sshpass -p "$SSH_PASS" scp -o StrictHostKeyChecking=no build.tar.gz defectect@166.104.246.64:~/website/
          
          # 서버에서 압축 해제 및 도커 실행
          sshpass -p "$SSH_PASS" ssh -o StrictHostKeyChecking=no defectect@166.104.246.64 "cd ~/website && tar -xzf build.tar.gz && docker-compose up -d --build" 